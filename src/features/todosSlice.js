import { createSlice, createEntityAdapter } from "@reduxjs/toolkit";
import { createSelector } from 'reselect';

// Normalising state using createEntityAdapter
const todoAdapter = createEntityAdapter();
const initialState = todoAdapter.getInitialState();

// A slice for the whole todo app
// No need to type "initialState: initialState" because the property name and variable name are the same (syntactic sugar)
// TODO: Add more reducers (toggleTodo, ...)
const todosSlice = createSlice({
    name: 'todos',
    initialState,
    reducers: {
        addTodo: todoAdapter.addOne,
        deleteTodo: todoAdapter.removeOne,
        toggleTodo: (state, action) => {
            const { id } = action.payload;
            const todo = state.entities[id]
        
            todoAdapter.updateOne(state, {id, changes: {completed: !todo.completed}})
        }
    },
});

/*
Todo entry structure:
{
    id,        - a unique identifier generated by uuidv4 in the TodoForm component
    task,      - the main text of the task, necessary to create it (string)
    completed, - shows whether the task is completed or not (boolean)
    notes,     - another text field, a longer description of the task, empty by default (string)
}
*/

// TODO: Consider 'soft deletions', i.e. adding a boolean 'deleted' field that's false by default

// A factory function for a memoized selector for todos
// The input reducer returns a stable reference (no change in state means no reference)
// Gets an object of todos from state, converts it into an array, filters the array based on completion status
export const makeSelectTodos = (completed) => createSelector(
    state => state.todos.entities,
    todos => {
        const todosList = Object.values(todos);
        return todosList.filter(todo => todo.completed === completed);
    },
);

// Don't need memoization here, just a simple selector
export const selectTodo = id => state => state.todos.entities[id];

// Export actions
export const { addTodo, deleteTodo, toggleTodo } = todosSlice.actions;
// Export reducer
export default todosSlice.reducer;