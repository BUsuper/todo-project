import { createSlice, createEntityAdapter } from "@reduxjs/toolkit";

// Normalising state using createEntityAdapter
const todoAdapter = createEntityAdapter();
const initialState = todoAdapter.getInitialState();

// A slice for the whole todo app
// No need to type "initialState: initialState" because the property name and variable name are the same (syntactic sugar)
const todosSlice = createSlice({
    name: 'todos',
    initialState,
    reducers: {
        addTodo: todoAdapter.addOne,
        deleteTodo: todoAdapter.removeOne,
        toggleTodo: (state, action) => {
            const { id } = action.payload;
            const todo = state.entities[id];
        
            todoAdapter.updateOne(state, {id, changes: {completed: !todo.completed}});
        },
        updateTodo: (state, action) => {
            const todo = action.payload;
            const id = todo.id;

            todoAdapter.updateOne(state, {id, changes: {task: todo.task, notes: todo.notes, date: todo.date}})
        }
    },
});

/*
Todo entry structure:
{
    id,        - a unique identifier generated by uuidv4 in the TodoForm component
    task,      - the main text of the task, necessary to create it (string)
    completed, - shows whether the task is completed or not (boolean)
    notes,     - another text field, a longer description of the task, empty by default (string)
    date,      - contains the todo's deadline (string) - OPTIONAL, null if not chosen
}
*/

// Export actions
export const { addTodo, deleteTodo, toggleTodo, updateTodo } = todosSlice.actions;
// Export reducer
export default todosSlice.reducer;